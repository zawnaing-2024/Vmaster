╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║              🐙 GitHub Deployment - Super Quick Guide 🐙                     ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ STEP 1: Create GitHub Repository (2 minutes)                                 │
└──────────────────────────────────────────────────────────────────────────────┘

  1. Go to: https://github.com
  2. Click: "+" → "New repository"
  3. Name: vmaster-cms
  4. Visibility: Private
  5. Click: "Create repository"

┌──────────────────────────────────────────────────────────────────────────────┐
│ STEP 2: Push Code to GitHub (On Your Mac)                                    │
└──────────────────────────────────────────────────────────────────────────────┘

  cd "/Users/zawnainghtun/My Coding Project/VPN CMS Portal"
  
  git init
  git add .
  git commit -m "Initial commit with custom plan feature"
  git remote add origin https://github.com/YOUR_USERNAME/vmaster-cms.git
  git branch -M main
  git push -u origin main

  ✅ Done! Code is now on GitHub!

┌──────────────────────────────────────────────────────────────────────────────┐
│ STEP 3: Deploy to Production Server (First Time Only)                        │
└──────────────────────────────────────────────────────────────────────────────┘

  # SSH to your Ubuntu server
  ssh root@your-server-ip

  # Backup existing vmaster
  cd /var/www
  sudo mv vmaster vmaster_backup_$(date +%Y%m%d)

  # Clone from GitHub
  sudo git clone https://github.com/YOUR_USERNAME/vmaster-cms.git vmaster

  # Setup database
  cd vmaster
  docker exec -i vpn_cms_db mysql -uroot -prootpassword vpn_cms_portal < database/add_plan_duration.sql

  # Restart
  docker restart vpn_cms_web

  ✅ Done! Production is now running from GitHub!

┌──────────────────────────────────────────────────────────────────────────────┐
│ STEP 4: Update Production (Every Time You Make Changes)                      │
└──────────────────────────────────────────────────────────────────────────────┘

  ┌─────────────────────────────────────────┐
  │ On Your Mac:                            │
  └─────────────────────────────────────────┘
    1. Make changes
    2. Test: http://localhost:8080
    3. Push to GitHub:
       
       git add .
       git commit -m "Description of changes"
       git push origin main

  ┌─────────────────────────────────────────┐
  │ On Ubuntu Server:                       │
  └─────────────────────────────────────────┘
    ssh root@your-server-ip
    cd /var/www/vmaster
    sudo bash scripts/safe-update.sh

  ✅ Done! Production updated safely!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🛡️  SAFETY GUARANTEES:

  ✅ Database is NEVER overwritten
  ✅ Automatic backup before every update
  ✅ User uploads are protected
  ✅ Easy rollback if needed
  ✅ Zero data loss

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📋 TYPICAL WORKFLOW:

  1. Develop on Mac → Test locally
  2. git push origin main
  3. SSH to server → sudo bash scripts/safe-update.sh
  4. Test production site
  5. Done! ✅

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔄 WHAT THE SAFE UPDATE SCRIPT DOES:

  1. ✅ Backs up database automatically
  2. ✅ Pulls latest code from GitHub
  3. ✅ Runs database migrations (if any)
  4. ✅ Restarts web container only
  5. ✅ Verifies everything works
  6. ✅ Shows summary and rollback instructions

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚨 EMERGENCY ROLLBACK:

  If update causes issues:

  docker exec -i vpn_cms_db mysql -uroot -prootpassword vpn_cms_portal < backup_before_update_YYYYMMDD_HHMMSS.sql
  git reset --hard HEAD~1
  docker restart vpn_cms_web

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📚 DOCUMENTATION:

  • GITHUB_SETUP.md - Detailed GitHub setup guide
  • DEPLOY_TO_PRODUCTION.md - Complete deployment guide
  • scripts/safe-update.sh - Automatic update script

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎉 YOU'RE READY!

  Your deployment is now:
  • Safe (automatic backups)
  • Fast (one command)
  • Reliable (easy rollback)
  • Professional (version control)

  Start with STEP 1 above! 🚀

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
